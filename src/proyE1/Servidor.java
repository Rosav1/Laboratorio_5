package proyE1;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JApplet;
import proyE1.Cliente1;
import proyE1.Cliente2;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author AUTONOMA
 */
public class Servidor extends JApplet implements ActionListener, Runnable {

    static final int puerto = 3022;
    ServerSocket skServidor;
    DataInputStream in;
    DataOutputStream out;
    Socket sc;
    Socket sc2;
    Thread hs;
    Thread hs1;

    @Override
    public void init() {

        try {
            initComponents();
            skServidor = new ServerSocket(puerto);
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtxtPanel = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        jtxtPanel.setColumns(20);
        jtxtPanel.setRows(5);
        jScrollPane1.setViewportView(jtxtPanel);

        jLabel1.setText("Servidor");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(jLabel1)
                .addContainerGap(194, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jtxtPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void run() {
        Cliente1 c1 = new Cliente1();
        Cliente2 c2 = new Cliente2();

        try {
            jtxtPanel.append("\nEscucho el puerto" + puerto);
            sc = skServidor.accept();
            sc2 = skServidor.accept();

            in = new DataInputStream(sc.getInputStream());
            in = new DataInputStream(sc2.getInputStream());

            out = new DataOutputStream(sc.getOutputStream());
            out = new DataOutputStream(sc2.getOutputStream());
            hs = new Thread(this);
            hs1 = new Thread(this);

            hs.start();
            hs1.start();

        } catch (IOException ex) {
            Logger.getLogger(Servidor.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            out.writeUTF("\nCliente " + c1.nombre + ": " + c1.cliente);
            out.writeUTF("\nCliente " + c2.nombre + ": " + c2.cliente);
            jtxtPanel.append("\nServidor: " + c1.cliente);
            jtxtPanel.append("\nServidor: " + c2.cliente);
        } catch (IOException e) {
        }
        try {
            while (true) {
                String msg = in.readUTF();
                String msg2 = in.readUTF();
                jtxtPanel.append("\nCliente: " + msg);
                jtxtPanel.append("\nCliente: " + msg2);
            }
        } catch (Exception ex) {

            try {
                jtxtPanel.append("\nCliente desconectado...");
                sc.close();
                sc2.close();
            } catch (Exception e) {
            }
        }
    }

}
